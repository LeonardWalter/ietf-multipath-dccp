<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY I-D.amend-tsvwg-multipath-framework-mpdccp SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-amend-tsvwg-multipath-framework-mpdccp-01.xml">
<!ENTITY I-D.lhwxz-hybrid-access-network-architecture SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-lhwxz-hybrid-access-network-architecture-02.xml">
<!ENTITY I-D.muley-network-based-bonding-hybrid-access SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-muley-network-based-bonding-hybrid-access-03.xml">
<!ENTITY I-D.amend-tsvwg-dccp-udp-header-conversion SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.draft-amend-tsvwg-dccp-udp-header-conversion-01.xml">
<!ENTITY RFC0793 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.0793.xml">
<!ENTITY RFC2119 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml">
<!ENTITY RFC4340 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.4340.xml">
<!ENTITY RFC5597 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.5597.xml">
<!ENTITY RFC6773 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6773.xml">
<!ENTITY RFC6824 SYSTEM "https://xml2rfc.ietf.org/public/rfc/bibxml/reference.RFC.6824.xml">
]>
<rfc submissionType="IETF" docName="draft-amend-tsvwg-multipath-dccp-03" category="exp">
  <?rfc compact="yes"?>
  <?rfc text-list-symbols="o*+-"?>
  <?rfc subcompact="no"?>
  <?rfc sortrefs="yes"?>
  <?rfc symrefs="yes"?>
  <?rfc strict="yes"?>
  <?rfc toc="yes"?>
  <front>
    <title abbrev="Multipath DCCP">DCCP Extensions for Multipath Operation with Multiple Addresses</title>
    <author fullname="Markus Amend" initials="M." surname="Amend">
      <organization>Deutsche Telekom</organization>
      <address>
        <postal>
          <street>T-Online-Allee 1</street>
          <street>64295 Darmstadt</street>
          <street>Germany</street>
        </postal>
        <email>Markus.Amend@telekom.de</email>
      </address>
    </author>
    <author fullname="Eckard Bogenfeld" initials="E." surname="Bogenfeld">
      <organization>Deutsche Telekom</organization>
      <address>
        <postal>
          <street>T-Online-Allee 1</street>
          <street>64295 Darmstadt</street>
          <street>Germany</street>
        </postal>
        <email>Eckard.Bogenfeld@telekom.de</email>
      </address>
    </author>
    <author fullname="Anna Brunstrom" initials="A." surname="Brunstrom">
      <organization>Karlstad University</organization>
      <address>
        <postal>
          <street>Universitetsgatan 2</street>
          <street>651 88 Karlstad</street>
          <street>Sweden</street>
        </postal>
        <email>anna.brunstrom@kau.se</email>
      </address>
    </author>
    <author fullname="Andreas Kassler" initials="A." surname="Kassler">
      <organization>Karlstad University</organization>
      <address>
        <postal>
          <street>Universitetsgatan 2</street>
          <street>651 88 Karlstad</street>
          <street>Sweden</street>
        </postal>
        <email>andreas.kassler@kau.se</email>
      </address>
    </author>
    <author fullname="Veselin Rakocevic" initials="V." surname="Rakocevic">
      <organization>City University of London</organization>
      <address>
        <postal>
          <street>Northampton Square</street>
          <street>London</street>
          <street>United Kingdom</street>
        </postal>
        <email>veselin.rakocevic.1@city.ac.uk</email>
      </address>
    </author>
    <date day="04" month="November" year="2019"/>
    <workgroup>Transport Area Working Group</workgroup>
    <abstract>
      <t>
   DCCP communication is currently restricted to a single path per
   connection, yet multiple paths often exist between peers.  The
   simultaneous use of these multiple paths for a DCCP session could
   improve resource usage within the network and, thus, improve user
   experience through higher throughput and improved resilience to
   network failure.</t>
      <t>
   Multipath DCCP provides the ability to simultaneously use multiple
   paths between peers.  This document presents a set of extensions to
   traditional DCCP to support multipath operation.  The protocol offers
   the same type of service to applications as DCCP and it provides the
   components necessary to establish and use multiple DCCP flows across
   potentially disjoint paths.</t>
    </abstract>
  </front>
  <middle>
    <section title="Introduction" anchor="section-1">
      <t>
   Multipath DCCP (MP-DCCP) is a set of extensions to regular DCCP
   <xref target="RFC4340"/>, which enables a transport connection to operate across
   multiple paths simultaneously.  DCCP multipath operations is
   suggested in the context of ongoing 3GPP work on 5G multi-access
   solutions <xref target="I-D.amend-tsvwg-multipath-framework-mpdccp"/> and for
   hybrid access networks <xref target="I-D.lhwxz-hybrid-access-network-architecture"/><xref target="I-D.muley-network-based-bonding-hybrid-access"/>.  It
   can be applied for load-balancing, seamless session handover and
   aggregation purposes (referred to as steering, switching and
   splitting in 3GPP terminology <xref target="TR23.793"/>).</t>
      <t>
   This document presents the protocol changes required to add multipath
   capability to DCCP; specifically, those for signaling and setting up
   multiple paths ("subflows"), managing these subflows, reassembly of
   data, and termination of sessions.</t>
      <section title="Multipath DCCP in the Networking Stack" anchor="section-1.1">
        <t>
   MP-DCCP operates at the transport layer and aims to be transparent to
   both higher and lower layers.  It is a set of additional features on
   top of standard DCCP; Figure 1 illustrates this layering.  MP-DCCP is
   designed to be used by applications in the same way as DCCP with no
   changes.</t>
        <figure title="Comparison of Standard DCCP and MP-DCCP Protocol Stacks" anchor="ref-comparison-of-standard-dccp-and-mp-dccp-protocol-stacks">
          <artwork><![CDATA[
                             +-------------------------------+
                             |           Application         |
+---------------+            +-------------------------------+
|  Application  |            |            MP-DCCP            |
+---------------+            + - - - - - - - + - - - - - - - +
|      DCCP     |            |Subflow (DCCP) |Subflow (DCCP) |
+---------------+            +-------------------------------+
|      IP       |            |       IP      |      IP       |
+---------------+            +-------------------------------+
]]></artwork>
        </figure>
      </section>
      <section title="Terminology" anchor="section-1.2">
        <t>
   [Tbd], could be similar to <xref target="RFC6824"/></t>
      </section>
      <section title="MP-DCCP Concept" anchor="section-1.3">
        <figure title="Example MP-DCCP Usage Scenario" anchor="ref-example-mp-dccp-usage-scenario">
          <artwork><![CDATA[
           Host A                               Host B
------------------------             ------------------------
Address A1    Address A2             Address B1    Address B2
----------    ----------             ----------    ----------
  |             |                      |             |
  |         (DCCP flow setup)          |             |
  |----------------------------------->|             |
  |<-----------------------------------|             |
  |             |                      |             |
  |             |  (DCCP flow setup)   |             |
  |             |--------------------->|             |
  |             |<---------------------|             |
  | merge individual DCCP flows to one multipath connection
  |             |                      |             |
]]></artwork>
        </figure>
      </section>
      <section title="Differences from Multipath TCP" anchor="section-1.4">
        <t>
   Multipath DCCP is similar to Multipath TCP <xref target="RFC6824"/>, in that it
   extends the related basic DCCP transport protocol <xref target="RFC4340"/> with
   multipath capabilities in the same way as Multipath TCP extends TCP
   <xref target="RFC0793"/>.  However, mainly dominated by the basic protocols TCP and
   DCPP, the transport characteristics are different.</t>
        <t><xref target="table_tcp_dccp_comp"/> compares the protocol characteristics of TCP and DCCP, which
   are by nature inherited by their respective multipath extensions.  A
   major difference lies in the delivery of payload, which is for TCP an
   exact copy of the generated byte-stream.  DCCP behaves contrary and
   does not guarantee to transmit any payload nor the order of delivery.
   Since this is mainly affecting the receiving endpoint of a TCP or
   DCCP communication, many similarities on sender side can be stated.
   Both transport protocols share the 3-way initiation of a
   communication and both exploit a congestion control to adapt to path
   characteristics.</t>
        <texttable style="all" title="TCP and DCCP protocol comparison" anchor="table_tcp_dccp_comp">
          <ttcol>Feature</ttcol>
          <ttcol>TCP</ttcol>
          <ttcol>DCCP</ttcol>
          <c>Full-Duplex</c>
          <c>yes</c>
          <c>yes</c>
          <c>Connection- Oriented</c>
          <c>yes </c>
          <c>yes </c>
          <c>Header option space</c>
          <c>40 bytes</c>
          <c>&lt; 1008 bytes or PMTU</c>
          <c>Data transfer</c>
          <c>reliable</c>
          <c>unreliable</c>
          <c>Packet-loss handling</c>
          <c>re- transmission</c>
          <c>report only</c>
          <c>Ordered data delivery</c>
          <c>yes </c>
          <c>no </c>
          <c>Sequence numbers</c>
          <c>one per byte</c>
          <c>one per PDU</c>
          <c>Flow control</c>
          <c>yes</c>
          <c>no</c>
          <c>Congestion control</c>
          <c>yes </c>
          <c>yes </c>
          <c>ECN support</c>
          <c>yes</c>
          <c>yes</c>
          <c>Selective ACK</c>
          <c>yes</c>
          <c>depends on congestion control</c>
          <c>Fix message boundaries</c>
          <c>no</c>
          <c>yes</c>
          <c>Path MTU discovery</c>
          <c>yes</c>
          <c>yes</c>
          <c>Fragmentation</c>
          <c>yes</c>
          <c>no</c>
          <c>SYN flood protection</c>
          <c>yes</c>
          <c>no</c>
          <c>Half-open connections</c>
          <c>yes</c>
          <c>no</c>
        </texttable>
        <t>
   Consequently, the multipath features, shown in <xref target="table_mptpc_mpdccp_comp"/>, are the same, supporting volatile paths, session handover and path aggregation capabilities. All of them profit by the existence of congestion control.</t>
        <texttable style="all" title="MPTCP and MP-DCCP protocol comparison" anchor="table_mptpc_mpdccp_comp">
          <ttcol>Feature</ttcol>
          <ttcol>MP-TCP</ttcol>
          <ttcol>MP-DCCP</ttcol>
          <c>Volatile paths</c>
          <c>yes</c>
          <c>yes</c>
          <c>Robust session establishment</c>
          <c>no</c>
          <c>yes</c>
          <c>Data reassembly</c>
          <c>yes</c>
          <c>optional / modular</c>
          <c>Expandability</c>
          <c>limited by TCP header</c>
          <c>flexible</c>
          <c>Session handover</c>
          <c>yes</c>
          <c>yes</c>
          <c>Path aggregation</c>
          <c>yes</c>
          <c>yes</c>
        </texttable>
        <t>
   Therefore the sender logic is not much different between MP-DCCP and
   MPTCP, even if the multipath session initiation differs.  MP-DCCP
   inherits a robust session establishment feature, which guarantees
   communication establishment if at least one functional path is
   available.  MP-TCP relies on an initial path, which has to work;
   otherwise no communication can be established.</t>
        <t>
   The receiver side for MP-DCCP has to deal with the unreliable
   transport character of DCCP and a possible re-assembly of the data
   stream.  In practice, it is assumed that some sort of re-assembly has
   to be applied, even if DCCP and the order of delivery is unreliable
   by nature.  Such re-assembly mechanisms have to account for the fact
   that packet loss may occur for any of the DCCP subflows.  Another
   issue is the packet reordering introduced when a DCCP communication
   is split across paths with disjoint latencies.  In theory,
   applications using DCCP certainly have to deal with packet
   reordering, since DCCP has no mechanisms to prevent it.  However, in
   practice, without any multipath extension, packet reordering can be
   assumed to be very limited.  Therefore most services on top of DCCP
   are not expecting massive packet reordering and degrades their
   performance if it happens anyway.</t>
        <t>
   The receiving process for MP-TCP is on the other hand a simple "just wait" approach, since TCP guarantees reliable delivery.</t>
      </section>
      <section title="Requirements Language" anchor="section-1.5">
        <t>
   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in <xref target="RFC2119"/>.</t>
      </section>
    </section>
    <section title="Operation Overview" anchor="section-2">
      <t>
       [Tbd], could be similar to <xref target="RFC6824"/></t>
      <t>
The Multipath Capability for MP-DCCP can be negotiated with a new DCCP feature, as described in <xref target="section-3"/>.
Once negotiated, all subsequent MP-DCCP operations are signalled with a variable length multipath-related option, as described in <xref target="section-3-1"/>.
</t>
    </section>
    <section title="MP-DCCP Protocol" anchor="section-3">
      <t>
   The DCCP protocol feature list (<xref target="RFC4340"/> section 6.4) will be enhanced
by a new Multipath related feature with Feature number 10, as shown in <xref target="ref-feature-list"/>.
              </t>
      <figure title="Proposed Feature Set" anchor="ref-feature-list">
        <artwork><![CDATA[

                                                Rec'n Initial
   Number   Meaning                       Rule   Value  Req'd
   ------   -------                       -----  -----  -----
      0     Reserved
      1     Congestion Control ID (CCID)   SP      2      Y
      2     Allow Short Seqnos             SP      0      Y
      3     Sequence Window                NN     100     Y
      4     ECN Incapable                  SP      0      N
      5     Ack Ratio                      NN      2      N
      6     Send Ack Vector                SP      0      N
      7     Send NDP Count                 SP      0      N
      8     Minimum Checksum Coverage      SP      0      N
      9     Check Data Checksum            SP      0      N
      10    Multipath Capable              SP      0      N
    11-127  Reserved
   128-255  CCID-specific features
]]></artwork>
      </figure>
      <t>The DCCP protocol options (<xref target="RFC4340"/> section 5.8) will be enhanced
by a new Multipath related variable-length option with option type 45, as shown in <xref target="ref-option-list"/>.
</t>
      <figure title="Proposed Option Set" anchor="ref-option-list">
        <artwork><![CDATA[
            Option                           DCCP-
    Type    Length     Meaning               Data?
    ----    ------     -------               -----
      0        1       Padding                 Y
      1        1       Mandatory               N
      2        1       Slow Receiver           Y
    3-31       1       Reserved
     32     variable   Change L                N
     33     variable   Confirm L               N
     34     variable   Change R                N
     35     variable   Confirm R               N
     36     variable   Init Cookie             N
     37       3-8      NDP Count               Y
     38     variable   Ack Vector [Nonce 0]    N
     39     variable   Ack Vector [Nonce 1]    N
     40     variable   Data Dropped            N
     41        6       Timestamp               Y
     42      6/8/10    Timestamp Echo          Y
     43       4/6      Elapsed Time            N
     44        6       Data Checksum           Y
     45     variable   Multipath               Y
    46-127  variable   Reserved
   128-255  variable   CCID-specific options   -
]]></artwork>
      </figure>
      <t>
</t>
      <t>
   [Tbd] On top it requires particular considerations for:</t>
      <t>
        <list style="symbols">
          <t>The minimum PMTU of the individual paths must be selected to
      announce to the application.  Changes of individual path PMTUs
      must be re-announced to the application if they are lower than the
      current announced PMTU.</t>
          <t>Overall sequencing for optional reassembly procedure</t>
          <t>Congestion control</t>
          <t>Robust MP-DCCP session establishment (no dependency on an initial
      path setup)</t>
        </list>
      </t>
      <section title="Multipath Capable Feature" anchor="section-3-1">
        <t>      DCCP endpoints are multipath-disabled by default and multipath capability can be negotiated with the
        Multipath Capable Feature.
  </t>
        <t>
  Multipath Capable has feature number 10 and is server-priority. It takes one-byte values.
  The first four bits are used to specify compatible versions of the MP-DCCP implementation. The
  following four bits are reserved for further use.
  </t>
      </section>
      <section title="Multipath Option">
        <t>
</t>
        <figure>
          <artwork><![CDATA[
+--------+--------+--------+--------+--------
|00101101| Length | MP_OPT | Value(s) ...
+--------+--------+--------+--------+--------
 Type=45
]]></artwork>
        </figure>
        <figure title="MP_OPT Option Types" anchor="ref-mp-option-list">
          <artwork><![CDATA[
         Option
   Type  Length  MP_OPT        Meaning
   ----  ------  -------       -----
    45     7     0 =MP_CONFIRM Confirm reception and processing of
                               an MP_OPT option
    45     7     1 =MP_JOIN    Join path to an existing MP-DCCP flow
    45     3     2 =MP_FAST_CLOSE Close MP-DCCP flow
    45     var   3 =MP_KEY     Exchange key material for MP_HMAC
    45     7     4 =MP_SEQ     Multipath Sequence Number
    45     23    5 =MP_HMAC    HMA Code for authentication
    45     12    6 =MP_RTT     Transmit RTT values
    45     TBD   7 =MP_ADDADDR    TBD
    45     TBD   8 =MP_REMOVEADDR TBD
    45     TBD   9 =MP_PRIO       TBD
]]></artwork>
        </figure>
        <section title="MP_CONFIRM">
          <figure>
            <artwork><![CDATA[
  +--------+--------+--------+--------+--------+--------+--------+
  |00101101| Length |00000000| List of options ...
  +--------+--------+--------+--------+--------+--------+--------+
   Type=45           MP_OPT=0
  ]]></artwork>
          </figure>
          <t>MP_CONFIRM can be used to send confirmation of received and
          processed options. Confirmed options are copied verbatim and appended
        as List of options.</t>
        </section>
        <section title="MP_JOIN">
          <figure>
            <artwork><![CDATA[
  +--------+--------+--------+--------+--------+--------+--------+
  |00101101|00001011|00000001| Path Token                        |
  +--------+--------+--------+--------+--------+--------+--------+
  | Nonce                             |
  +--------+--------+--------+--------+
   Type=45  Length=11 MP_OPT=1
  ]]></artwork>
          </figure>
          <t>The MP_JOIN option is used to add a new path to an existing MP-DCCP
            flow. The Path Token is the SHA-1 HASH of the derived key (d-key),
            which was previously exchanged with the MP_KEY option.
            MP_HMAC MUST be set when using MP_JOIN to provide authentication (See
            MP_HMAC for details). Also MP_KEY must be set to provide key material
          for authentication purposes.</t>
        </section>
        <section title="MP_FAST_CLOSE">
          <figure>
            <artwork><![CDATA[
  +--------+--------+--------+
  |00101101|00000011|00000010|
  +--------+--------+--------+
   Type=45  Length=3 MP_OPT=2
  ]]></artwork>
          </figure>
          <t>MP_FAST_CLOSE terminates the MP-DCCP flow and all corresponding
          subflows.</t>
        </section>
        <section title="MP_KEY">
          <figure>
            <artwork><![CDATA[
  +--------+--------+--------+--------+--------+--------+--------+
  |00101101| Length |00000011|Key Type| Key Data
  +--------+--------+--------+--------+--------+--------+--------+
   Type=45           MP_OPT=3
  ]]></artwork>
          </figure>
          <t>
        The MP_KEY suboption is used to exchange key material between
      hosts. The Key Type field is used to specify the key type. Key types are
      shown in table <xref target="ref-key-type-list"/>.
      <figure title="MP_KEY Key Types" anchor="ref-key-type-list"><artwork><![CDATA[
          Option
    Key Type               Key Length Meaning
    ----                   ------     -----
    0 =Plain Text          8          Plain Text Key
    1 =ECDHE-C25519-SHA256 32         ECDHE with SHA256 and Curve25519
    2 =ECDHE-C25519-SHA512 32         ECDHE with SHA512 and Curve25519
    3-255                      Reserved
]]></artwork></figure>
<list style="hanging"><t hangText="Plain Text"><vspace/>
            Key Material is exchanged in plain text between hosts and the key
            parts (key-a, key-b) are concatenated to form the derived key (d-key).
          </t><t hangText="ECDHE-SHA256-C25519"><vspace/>
            Key Material is exchanged via ECDHE key exchange with SHA256 and
            Curve 25519 to generate the derived key (d-key).
          </t><t hangText="ECDHE-SHA512-C25519"><vspace/>
            Key Material is exchanged via ECDHE key exchange with SHA512 and
            Curve 25519 to generate the derived key (d-key).
          </t></list>
      </t>
        </section>
        <section title="MP_SEQ">
          <figure>
            <artwork><![CDATA[
  +--------+--------+--------+--------+--------+--------+--------+
  |00101101|00000111|00000100| Multipath Sequence Number         |
  +--------+--------+--------+--------+--------+--------+--------+
   Type=45  Length=7 MP_OPT=4
  ]]></artwork>
          </figure>
          <t>The MP_SEQ option is used for end-to-end datagram-based sequence
            numbers of an MP-DCCP connection. The initial data sequence
            number (IDSN) SHOULD be set randomly. </t>
        </section>
        <section title="MP_HMAC">
          <figure>
            <artwork><![CDATA[
  +--------+--------+--------+--------+--------+--------+
  |00101101|00000111|00000101| HMAC-SHA1 (20 bytes) ...
  +--------+--------+--------+--------+--------+--------+
   Type=45  Length=23 MP_OPT=5
  ]]></artwork>
          </figure>
          <t>The MP_HMAC option is used to provide authentication for the MP_JOIN option.
            The HMAC is built using the derived key (d-key) calculated previously
          from the handshake key material exchanged with the MP_KEY option. The
          Message for the HMAC is the header of the MP_JOIN for which authentication
          shall be performed. By including a nonce in these datagrams, possible replay-attacks
          are remedied.
        t</t>
        </section>
        <section title="MP_RTT">
          <figure>
            <artwork><![CDATA[
  +--------+--------+--------+--------+--------+--------+--------+
  |00101101|00000111|00000110|RTT Type| RTT
  +--------+--------+--------+--------+--------+--------+--------+
  |        | Age                               |
  +--------+--------+--------+--------+--------+
   Type=45  Length=12 MP_OPT=6
  ]]></artwork>
          </figure>
          <t>The MP_RTT option is used to transmit RTT values in milliseconds.
          Additionally, the age of the measurement is specified in milliseconds.
          <list style="hanging"><t hangText="Raw RTT (=0)"><vspace/>
                      Raw RTT value of the last Datagram Round-Trip. The Age
                      parameter is set to the age of when the Ack for the datagram
                      was received.
                    </t><t hangText="Min RTT (=1)"><vspace/>
                      Min RTT value. The period for computing the Minimum can be specified
                      by the Age parameter.
                    </t><t hangText="Max RTT (=2)"><vspace/>
                      Max RTT value. The period for computing the Maximum can be specified
                      by the Age parameter.
                    </t><t hangText="Smooth RTT (=3)"><vspace/>
                      Averaged RTT value. The period for computing the Minimum can be specified
                      by the Age parameter.
                    </t></list></t>
        </section>
        <section title="MP_ADDADDR">
          <t>[TBD]</t>
        </section>
        <section title="MP_REMOVEADDR">
          <t>[TBD]</t>
        </section>
        <section title="MP_PRIO">
          <t>[TBD]</t>
        </section>
      </section>
      <section title="MP-DCCP Handshaking Procedure">
        <figure title="Example MP-DCCP Handshake" anchor="ref-mp-dccp-handshaking">
          <artwork><![CDATA[
            Host A                                         Host B
   ------------------------                              ----------
   Address A1    Address A2                              Address B1
   ----------    ----------                              ----------
       |             |                                       |
       |   DCCP-Request + MP_CAPABLE                         |
       |------- MP_KEY(Key-A) ------------------------------>|
       |<---------------------- MP_KEY(Key-B) ---------------|
       |   DCCP-Response + MP_CAPABLE agreed                 |
       |             |                                       |
       |   DCCP-Ack  |                                       |
       |--------- MP_KEY(Key-A) + MP_KEY(Key-B) ------------>|
       |             |                                       |
       |             |DCCP-Request + MP_CAPABLE              |
       |             |--- MP_JOIN(TB,RA) ------------------->|
       |             |<------MP_JOIN(TB,RB) + MP_HMAC(A)-----|
       |             |DCCP-Response                          |
       |             |                                       |
       |             |DCCP-Ack                               |
       |             |-------- MP_HMAC(B) ------------------>|
       |             |<--------------------------------------|
       |             |DCCP-ACK                               |
]]></artwork>
        </figure>
        <t>The basic initial handshake for the first flow is as follows:
          <list style="symbols"><t>Host A sends a DCCP-Request with the MP-Capable feature Change
              request and the MP_KEY option with Host-specific Key-A</t><t>Host B sends a DCCP-Response with Confirm feature for
              MP-Capable and the MP_Key option with Host-specific Key-B</t><t>Host A sends a DCCP-Ack with both Keys echoed to Host B</t></list>
          The handshake for subsequent flows based on a successful initial handshake is as follows:
            <list style="symbols"><t>Host A sends a DCCP-Request with the MP-Capable feature Change
                request and the MP_JOIN option with Token TB, derived from the
              derived key by applying a SHA-1 hash and truncating to the first 32 bits.
            Additionally, a random nonce RA is transmitted with the MP_JOIN.</t><t>Host B computes the HMAC of the DCCP-Request and sends a DCCP-Response with Confirm feature option for
                MP-Capable and the MP_JOIN option with the Token TB and a random nonce RB together with the computed MP_HMAC.</t><t>Host A sends a DCCP-Ack with the HMAC computed for the DCCP-Response.</t><t>Host B sends a DCCP-Ack confirm the HMAC and to conclude the handshaking.</t></list>
          </t>
      </section>
    </section>
    <section title="Security Considerations" anchor="section-4">
      <t>
   [Tbd]</t>
    </section>
    <section title="Interactions with Middleboxes" anchor="section-5">
      <t>
   [Tbd], should mention standardized technologies like <xref target="RFC5597"/> or
   <xref target="RFC6773"/> and U-DCCP <xref target="I-D.amend-tsvwg-dccp-udp-header-conversion"/></t>
    </section>
    <section title="Acknowledgments" anchor="section-6">
      <t>
        <list style="numbers">
          <t>Notes</t>
        </list>
      </t>
      <t>
   This document is inspired by Multipath TCP <xref target="RFC6824"/> and some text
   passages for the -00 version of the draft are copied almost
   unmodified.</t>
    </section>
    <section title="IANA Considerations" anchor="section-7">
      <t>
   [Tbd], must include options for:</t>
      <t>
        <list style="symbols">
          <t>handshaking procedure to indicate MP support</t>
          <t>handshaking procedure to indicate JOINING of an existing MP
      connection</t>
          <t>signaling of new or changed addresses</t>
          <t>setting handover or aggregation mode</t>
          <t>setting reordering on/off</t>
        </list>
      </t>
      <t>
   should include options carrying:</t>
      <t>
        <list style="symbols">
          <t>overall sequence number for restoring purposes</t>
          <t>sender time measurements for restoring purposes</t>
          <t>scheduler preferences</t>
          <t>reordering preferences</t>
        </list>
      </t>
    </section>
  </middle>
  <back>
    <references title="Informative References">
	&I-D.amend-tsvwg-multipath-framework-mpdccp;
	&I-D.lhwxz-hybrid-access-network-architecture;
	&I-D.muley-network-based-bonding-hybrid-access;
	&I-D.amend-tsvwg-dccp-udp-header-conversion;
	&RFC0793;
	&RFC2119;
	&RFC4340;
	&RFC5597;
	&RFC6773;
	&RFC6824;
	<reference anchor="TR23.793" target=""><front><title>Study on access traffic steering, switch and splitting support in the 5G System (5GS) architecture</title><author fullname="3GPP">
	</author><date day="19" month="December" year="2018"/></front></reference>
	</references>
  </back>
</rfc>
